//Car sorting (on the basis of distance from origin) problem using vectors 

#include <iostream>
#include <vector>
#include <algorithm> //for sort function
using namespace std;

bool compare(pair<int,int>p1 , pair<int,int>p2)
{
    //square of distance
    int d1 = p1.first*p1.first + p1.second*p1.second;
    int d2 = p2.first*p2.first + p2.second*p2.second;

    //if two cars are at same distance, sort according to x coordinate
    if(d1 == d2){
        return p1.first < p2.first;
    }
    return d1 < d2;
}

int main() {
    int n;
    cin >> n;
    vector<pair<int,int>> v;

    for(int i = 0; i < n; i++){
        int x,y;
        cin>>x>>y;
        v.push_back(make_pair(x,y));
    }
    //sort using comparator
    sort(v.begin(), v.end(), compare);

    //print the sorted cars
    //for each loop.....for every element p in vector v
    for(auto p:v){
        cout<<"Car "<<p.first<<","<<p.second<<endl;
    }
    return 0;
}
