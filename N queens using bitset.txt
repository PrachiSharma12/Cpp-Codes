#include <iostream>
#include <bitset>
using namespace std;
bitset<30> col,d1,d2;

void solveNqueens(int r,int n, int &ans)
{
    if(r == n)
    {
        ans++;
        return;
    }
    for(int c = 0; c < n; c++)
    {
        if( !col[c] && !d1[r-c+n-1] && !d2[r+c])   //if the corresponding column and diagonals are not blockedq 
        {
            //place a queen and block the corresponding diagonals and column
            col[c] = d1[r-c+n-1] = d2[r+c] = 1;
            //call on next row
            solveNqueens(r+1,n,ans);

            //backtracking
            col[c] = d1[r-c+n-1] = d2[r+c] = 0;
        }
    }
}
int main() {
    int n;
    cin >> n;
    int ans = 0;

    solveNqueens(0,n,ans);
    cout << ans << endl;
}
