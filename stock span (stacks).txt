#include <iostream>
#include <stack>
using namespace std;

void stockSpan(int prices[], int n, int span[])
{
    stack<int> s;  //stores indices of the days
    //0th day
    s.push(0);
    span[0] = 1;

    //loop for rest of the days --> O(N) --> pop and push each element only once!
    for(int i = 1; i < n; i++){
        int current_price = prices[i];

        //to get the topmost element that is higher than the current price
        while(!s.empty() and prices[s.top()] <= current_price){
            s.pop();
        }

        //now the topmost element is the index of previous highest
        if(!s.empty()){
            int prev_highest_idx = s.top();
            span[i] = i - prev_highest_idx;
        }
        else{
            span[i] = i + 1;
        }
        //push this element in the stack
        s.push(i);
    }
}
int main() {
    int prices[1000000], span[1000000] = {0};
    int n;
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> prices[i];
    }
    stockSpan(prices, n, span);
    for(int i = 0; i < n; i++){
        cout << span[i] << " ";
    }
    cout << "END";
}
