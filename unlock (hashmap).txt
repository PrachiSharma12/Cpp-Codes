#include <iostream>
#include <unordered_map>
using namespace std;
int main() {
    int n,k;
    cin >> n >> k;
    int arr[n];
    for(int i = 0; i < n ; i++){
        cin >> arr[i];
    }

    unordered_map<int,int> m;
    //insert value, index in the map
    for(int i = 0; i < n; i++){
        int no = arr[i];
        m[no] = i;
    }

    int count = k;  //to count the swaps
    for(int j = n; j > 0; j--){
        //1.Extract best position for current natural no
        int best_position_for_j = n - j;

        //2.If initial index is not equal to best position, swap the positions and increment count
        if(m[j] != best_position_for_j && count != 0){
            int old_idx = j;
            int x = m[j];
            swap(arr[best_position_for_j], arr[x]);
            count--;

            //update the map
            m[j] = best_position_for_j;
            int y = arr[x];
            m[y] = x;
        }
    }

    for(int i = 0; i < n; i++){
        cout << arr[i] << " ";
    }
}
