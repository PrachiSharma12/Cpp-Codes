#include <iostream>
using namespace std;

int square_root(int n,int p)
{
    int start = 0;
    int end = n;
    float ans = -1;
    while(start <= end)
    {
        int mid = start + ((end - start + 1)/2);
        
        if(mid*mid == n)
            return mid;
        else if(mid*mid > n)
            end = mid - 1;
        else
        {
            ans = mid;
            start = mid + 1;
        }   

    }

    //Floating part
    //Brute Force
    
    float inc = 0.1;
    for(int times = 1; times <= p; times++)    //upto how many places? (precision)
    {
        while(ans*ans <= n)
        {
            ans = ans + inc;
        }
        //overshot the value
        ans = ans - inc;
        inc = inc/10;   
    }
    return ans;
}
int main() {
    //Square root (nearest) using binary search
    int n;
    cin>>n;
    int sqrt = square_root(n,3);
    cout<<"Square root of "<<n<<" is "<<sqrt;

}



//Floating approach not working